// <auto-generated />
using System;
using BancoDataCoper.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BancoDataCoper.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BancoDataCoper.Models.Agencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BancoId");

                    b.Property<int>("Codigo");

                    b.Property<int>("DigitoVerificador");

                    b.Property<int>("PessoaJuridicaForeignKey");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.HasIndex("PessoaJuridicaForeignKey")
                        .IsUnique();

                    b.ToTable("Agencia");
                });

            modelBuilder.Entity("BancoDataCoper.Models.Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Banco");
                });

            modelBuilder.Entity("BancoDataCoper.Models.ContaCorrente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgenciaId");

                    b.Property<bool>("Ativo");

                    b.Property<int?>("BancoId");

                    b.Property<DateTime>("DataDeAbertura");

                    b.Property<DateTime?>("DataDeEncerramento");

                    b.Property<string>("Descricao");

                    b.Property<string>("DigitoVerificadorCC")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<int?>("FilialId");

                    b.Property<long>("NumeroDaConta");

                    b.Property<double>("Saldo");

                    b.HasKey("Id");

                    b.HasIndex("AgenciaId");

                    b.HasIndex("BancoId");

                    b.HasIndex("FilialId");

                    b.ToTable("ContaCorrente");
                });

            modelBuilder.Entity("BancoDataCoper.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Sigla")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("BancoDataCoper.Models.Filial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<int>("EmpresaId");

                    b.Property<long>("NumeroRegistroNaJuntaComercial");

                    b.Property<int>("PessoaJuridicaForeignKey");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("PessoaJuridicaForeignKey")
                        .IsUnique();

                    b.ToTable("Filial");
                });

            modelBuilder.Entity("BancoDataCoper.Models.MovimentoBancario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<bool>("Cheque");

                    b.Property<int>("ContaCorrenteId");

                    b.Property<DateTime>("Data");

                    b.Property<string>("Tipo")
                        .IsRequired();

                    b.Property<int?>("TransferenciaGetId");

                    b.Property<int?>("TransferenciaSendId");

                    b.Property<string>("Usuario");

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId");

                    b.HasIndex("TransferenciaGetId");

                    b.HasIndex("TransferenciaSendId");

                    b.ToTable("MovimentoBancario");
                });

            modelBuilder.Entity("BancoDataCoper.Models.PessoaFisica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<string>("Bairro")
                        .IsRequired();

                    b.Property<string>("CEP")
                        .IsRequired();

                    b.Property<string>("CPF")
                        .IsRequired();

                    b.Property<string>("Cidade")
                        .IsRequired();

                    b.Property<string>("Complemento");

                    b.Property<string>("DataNascimento")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Genero")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<int>("NumeroEndereco");

                    b.Property<string>("Observacao");

                    b.Property<string>("OrgaoExpedidor")
                        .IsRequired();

                    b.Property<string>("Pais")
                        .IsRequired();

                    b.Property<string>("RG")
                        .IsRequired();

                    b.Property<string>("Rua")
                        .IsRequired();

                    b.Property<string>("UF")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("PessoaFisica");
                });

            modelBuilder.Entity("BancoDataCoper.Models.PessoaJuridica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<string>("Bairro")
                        .IsRequired();

                    b.Property<string>("CEP")
                        .IsRequired();

                    b.Property<string>("CNPJ")
                        .IsRequired();

                    b.Property<string>("Cidade")
                        .IsRequired();

                    b.Property<string>("Complemento");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<int>("NumeroEndereco");

                    b.Property<string>("NumeroMunicipal")
                        .IsRequired();

                    b.Property<string>("Observacao");

                    b.Property<string>("Pais")
                        .IsRequired();

                    b.Property<string>("Rua")
                        .IsRequired();

                    b.Property<string>("UF")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("PessoaJuridica");
                });

            modelBuilder.Entity("BancoDataCoper.Models.PostoDeCaixa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<int>("CodigoDoPosto");

                    b.Property<int?>("ContaCorrenteId");

                    b.Property<int?>("FilialId");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("ContaCorrenteId");

                    b.HasIndex("FilialId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PostoDeCaixa");
                });

            modelBuilder.Entity("BancoDataCoper.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<long>("Celular");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<int?>("EmpresaId");

                    b.Property<int>("FilialId");

                    b.Property<int>("PessoaFisicaForeignKey");

                    b.Property<string>("Senha")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FilialId");

                    b.HasIndex("PessoaFisicaForeignKey")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("BancoDataCoper.Models.Agencia", b =>
                {
                    b.HasOne("BancoDataCoper.Models.Banco", "Banco")
                        .WithMany("Agencias")
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BancoDataCoper.Models.PessoaJuridica", "PessoaJuridica")
                        .WithOne("Agencia")
                        .HasForeignKey("BancoDataCoper.Models.Agencia", "PessoaJuridicaForeignKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BancoDataCoper.Models.ContaCorrente", b =>
                {
                    b.HasOne("BancoDataCoper.Models.Agencia", "Agencia")
                        .WithMany("ContasCorrentes")
                        .HasForeignKey("AgenciaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BancoDataCoper.Models.Banco", "Banco")
                        .WithMany("ContasCorrentes")
                        .HasForeignKey("BancoId");

                    b.HasOne("BancoDataCoper.Models.Filial", "Filial")
                        .WithMany("ContasCorrentes")
                        .HasForeignKey("FilialId");
                });

            modelBuilder.Entity("BancoDataCoper.Models.Filial", b =>
                {
                    b.HasOne("BancoDataCoper.Models.Empresa", "Empresa")
                        .WithMany("Filiais")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BancoDataCoper.Models.PessoaJuridica", "PessoaJuridica")
                        .WithOne("Filial")
                        .HasForeignKey("BancoDataCoper.Models.Filial", "PessoaJuridicaForeignKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BancoDataCoper.Models.MovimentoBancario", b =>
                {
                    b.HasOne("BancoDataCoper.Models.ContaCorrente", "ContaCorrente")
                        .WithMany("MovimentosBancarios")
                        .HasForeignKey("ContaCorrenteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BancoDataCoper.Models.ContaCorrente", "TransferenciaGet")
                        .WithMany("TransferenciasGet")
                        .HasForeignKey("TransferenciaGetId");

                    b.HasOne("BancoDataCoper.Models.ContaCorrente", "TransferenciaSend")
                        .WithMany("TransferenciasSend")
                        .HasForeignKey("TransferenciaSendId");
                });

            modelBuilder.Entity("BancoDataCoper.Models.PostoDeCaixa", b =>
                {
                    b.HasOne("BancoDataCoper.Models.ContaCorrente", "ContaCorrente")
                        .WithMany("PostosDeCaixa")
                        .HasForeignKey("ContaCorrenteId");

                    b.HasOne("BancoDataCoper.Models.Filial", "Filial")
                        .WithMany("PostosDeCaixa")
                        .HasForeignKey("FilialId");

                    b.HasOne("BancoDataCoper.Models.Usuario", "Usuario")
                        .WithMany("PostosDeCaixa")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BancoDataCoper.Models.Usuario", b =>
                {
                    b.HasOne("BancoDataCoper.Models.Empresa", "Empresa")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmpresaId");

                    b.HasOne("BancoDataCoper.Models.Filial", "Filial")
                        .WithMany("Usuarios")
                        .HasForeignKey("FilialId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BancoDataCoper.Models.PessoaFisica", "PessoaFisica")
                        .WithOne("Usuario")
                        .HasForeignKey("BancoDataCoper.Models.Usuario", "PessoaFisicaForeignKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
